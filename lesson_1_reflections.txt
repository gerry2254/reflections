Installing git
https://www.udacity.com/wiki/ud775/install-git/install-git-windows
http://msysgit.github.io/

Enable copy & paste in git Bash
https://www.udacity.com/wiki/ud775/git-bash-copy-paste
Menu->Properties and in the Options tab select QuickEdit Mode.

Commands:
git --version
git log
git diff
git checkout
git clone
git init
git status

Changing background color
If you prefer the background color of Git Bash to be something other than black,
Menu->Defaults and in the Colors tab select Screen Background(white)/Screen Text(black).

Downloading necessary files
git-completion.bash
git-prompt.sh
.bash_profile

Making Git configurations
git config --global color.ui auto
git config --global core.editor "'C:/Notepad++/notepad++.exe' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3

Make sure you can start your editor from Git Bash 
add to .bash_profile
alias notepp="C:/Notepad++/notepad++.exe"







Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
it was easy than looking thru all the file

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Help me to compare with old version

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
it may be too small or too big

How can you use the commands git log and git diff to view the history of files?

use git log to see history files 

use git diff with ids from history files

How might using version control make you more confident to make changes that could break something?

By keeping an old version i can be sure to return to de previuos version if i make a mistake

Now that you have your workspace set up, what do you want to try using Git for?

to use it at work